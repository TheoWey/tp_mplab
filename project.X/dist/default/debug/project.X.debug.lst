

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Apr 04 14:59:40 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     0008                     PORTD           equ	8	;# 
    65     0009                     PORTE           equ	9	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     0088                     TRISD           equ	136	;# 
    96     0089                     TRISE           equ	137	;# 
    97     008C                     PIE1            equ	140	;# 
    98     008D                     PIE2            equ	141	;# 
    99     008E                     PCON            equ	142	;# 
   100     0091                     SSPCON2         equ	145	;# 
   101     0092                     PR2             equ	146	;# 
   102     0093                     SSPADD          equ	147	;# 
   103     0094                     SSPSTAT         equ	148	;# 
   104     0098                     TXSTA           equ	152	;# 
   105     0099                     SPBRG           equ	153	;# 
   106     009C                     CMCON           equ	156	;# 
   107     009D                     CVRCON          equ	157	;# 
   108     009E                     ADRESL          equ	158	;# 
   109     009F                     ADCON1          equ	159	;# 
   110     010C                     EEDATA          equ	268	;# 
   111     010D                     EEADR           equ	269	;# 
   112     010E                     EEDATH          equ	270	;# 
   113     010F                     EEADRH          equ	271	;# 
   114     018C                     EECON1          equ	396	;# 
   115     018D                     EECON2          equ	397	;# 
   116     0000                     INDF            equ	0	;# 
   117     0001                     TMR0            equ	1	;# 
   118     0002                     PCL             equ	2	;# 
   119     0003                     STATUS          equ	3	;# 
   120     0004                     FSR             equ	4	;# 
   121     0005                     PORTA           equ	5	;# 
   122     0006                     PORTB           equ	6	;# 
   123     0007                     PORTC           equ	7	;# 
   124     0008                     PORTD           equ	8	;# 
   125     0009                     PORTE           equ	9	;# 
   126     000A                     PCLATH          equ	10	;# 
   127     000B                     INTCON          equ	11	;# 
   128     000C                     PIR1            equ	12	;# 
   129     000D                     PIR2            equ	13	;# 
   130     000E                     TMR1            equ	14	;# 
   131     000E                     TMR1L           equ	14	;# 
   132     000F                     TMR1H           equ	15	;# 
   133     0010                     T1CON           equ	16	;# 
   134     0011                     TMR2            equ	17	;# 
   135     0012                     T2CON           equ	18	;# 
   136     0013                     SSPBUF          equ	19	;# 
   137     0014                     SSPCON          equ	20	;# 
   138     0015                     CCPR1           equ	21	;# 
   139     0015                     CCPR1L          equ	21	;# 
   140     0016                     CCPR1H          equ	22	;# 
   141     0017                     CCP1CON         equ	23	;# 
   142     0018                     RCSTA           equ	24	;# 
   143     0019                     TXREG           equ	25	;# 
   144     001A                     RCREG           equ	26	;# 
   145     001B                     CCPR2           equ	27	;# 
   146     001B                     CCPR2L          equ	27	;# 
   147     001C                     CCPR2H          equ	28	;# 
   148     001D                     CCP2CON         equ	29	;# 
   149     001E                     ADRESH          equ	30	;# 
   150     001F                     ADCON0          equ	31	;# 
   151     0081                     OPTION_REG      equ	129	;# 
   152     0085                     TRISA           equ	133	;# 
   153     0086                     TRISB           equ	134	;# 
   154     0087                     TRISC           equ	135	;# 
   155     0088                     TRISD           equ	136	;# 
   156     0089                     TRISE           equ	137	;# 
   157     008C                     PIE1            equ	140	;# 
   158     008D                     PIE2            equ	141	;# 
   159     008E                     PCON            equ	142	;# 
   160     0091                     SSPCON2         equ	145	;# 
   161     0092                     PR2             equ	146	;# 
   162     0093                     SSPADD          equ	147	;# 
   163     0094                     SSPSTAT         equ	148	;# 
   164     0098                     TXSTA           equ	152	;# 
   165     0099                     SPBRG           equ	153	;# 
   166     009C                     CMCON           equ	156	;# 
   167     009D                     CVRCON          equ	157	;# 
   168     009E                     ADRESL          equ	158	;# 
   169     009F                     ADCON1          equ	159	;# 
   170     010C                     EEDATA          equ	268	;# 
   171     010D                     EEADR           equ	269	;# 
   172     010E                     EEDATH          equ	270	;# 
   173     010F                     EEADRH          equ	271	;# 
   174     018C                     EECON1          equ	396	;# 
   175     018D                     EECON2          equ	397	;# 
   176                           
   177                           	psect	idataCOMMON
   178     07A3                     __pidataCOMMON:
   179                           
   180                           ;initializer for main@speed
   181     07A3  3401               	retlw	1
   182                           
   183                           	psect	strings
   184     0003                     __pstrings:
   185     0003                     stringtab:
   186     0003                     __stringtab:
   187     0003                     stringcode:	
   188                           ;	String table - string pointers are 1 byte each
   189                           
   190     0003                     stringdir:
   191     0003  3000               	movlw	high stringdir
   192     0004  008A               	movwf	10
   193     0005  0804               	movf	4,w
   194     0006  0A84               	incf	4,f
   195     0007  0782               	addwf	2,f
   196     0008                     __stringbase:
   197     0008  3400               	retlw	0
   198     0009                     __end_of__stringtab:
   199     0009                     chenillard@MIN_CHENILLARD:
   200     0009  3401               	retlw	1
   201     000A                     __end_ofchenillard@MIN_CHENILLARD:
   202     000A                     chenillard@MAX_CHENILLARD:
   203     000A  3480               	retlw	128
   204     000B                     __end_ofchenillard@MAX_CHENILLARD:
   205     0008                     _PORTD          set	8
   206     0088                     _TRISD          set	136
   207                           
   208                           	psect	cinit
   209     07F3                     start_initialization:	
   210                           ; #config settings
   211                           
   212     07F3                     __initialization:
   213                           
   214                           ; Initialize objects allocated to COMMON
   215     07F3  120A  118A  27A3  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   216     07F8  00FD               	movwf	__pdataCOMMON& (0+127)
   217                           
   218                           ; Clear objects allocated to COMMON
   219     07F9  01FA               	clrf	__pbssCOMMON& (0+127)
   220     07FA  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   221     07FB  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   222     07FC                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225     07FC                     __end_of__initialization:
   226     07FC  0183               	clrf	3
   227     07FD  120A  118A  2FA4   	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	bssCOMMON
   230     007A                     __pbssCOMMON:
   231     007A                     chenillard@max:
   232     007A                     	ds	1
   233     007B                     chenillard@chenillard:
   234     007B                     	ds	1
   235     007C                     main@right:
   236     007C                     	ds	1
   237                           
   238                           	psect	dataCOMMON
   239     007D                     __pdataCOMMON:
   240     007D                     main@speed:
   241     007D                     	ds	1
   242                           
   243                           	psect	cstackCOMMON
   244     0070                     __pcstackCOMMON:
   245     0070                     ?_chenillard:
   246     0070                     ??_chenillard:	
   247                           ; 1 bytes @ 0x0
   248                           
   249                           
   250                           ; 1 bytes @ 0x0
   251     0070                     	ds	1
   252     0071                     chenillard@right:
   253                           
   254                           ; 1 bytes @ 0x1
   255     0071                     	ds	1
   256     0072                     ?_main:
   257     0072                     main@argc:	
   258                           ; 2 bytes @ 0x2
   259                           
   260                           
   261                           ; 2 bytes @ 0x2
   262     0072                     	ds	2
   263     0074                     main@argv:
   264                           
   265                           ; 2 bytes @ 0x4
   266     0074                     	ds	2
   267     0076                     ??_main:
   268                           
   269                           ; 1 bytes @ 0x6
   270     0076                     	ds	3
   271     0079                     main@menu:
   272                           
   273                           ; 1 bytes @ 0x9
   274     0079                     	ds	1
   275                           
   276                           	psect	maintext
   277     07A4                     __pmaintext:	
   278 ;;
   279 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   280 ;;
   281 ;; *************** function _main *****************
   282 ;; Defined at:
   283 ;;		line 12 in file "main.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;  argc            2    2[COMMON] int 
   286 ;;  argv            2    4[COMMON] PTR PTR unsigned char 
   287 ;; Auto vars:     Size  Location     Type
   288 ;;  menu            1    9[COMMON] _Bool 
   289 ;;  up              1    0        _Bool 
   290 ;; Return value:  Size  Location     Type
   291 ;;                  2    2[COMMON] int 
   292 ;; Registers used:
   293 ;;		wreg, status,2, status,0, pclath, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : B00/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   299 ;;      Params:         4       0       0       0       0
   300 ;;      Locals:         1       0       0       0       0
   301 ;;      Temps:          3       0       0       0       0
   302 ;;      Totals:         8       0       0       0       0
   303 ;;Total ram usage:        8 bytes
   304 ;; Hardware stack levels required when called: 1
   305 ;; This function calls:
   306 ;;		_chenillard
   307 ;; This function is called by:
   308 ;;		Startup code after reset
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312     07A4                     _main:	
   313                           ;psect for function _main
   314                           
   315     07A4                     l866:	
   316                           ;incstack = 0
   317                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   318                           
   319     07A4  01F9               	clrf	main@menu
   320     07A5                     l868:
   321                           
   322                           ;main.c: 16:     chenillard(right);
   323     07A5  3000               	movlw	0
   324     07A6  120A  118A  27BB  120A  118A  	fcall	_chenillard
   325     07AB                     l870:
   326                           
   327                           ;main.c: 17:     _delay((unsigned long)((100 * speed)*(20000000/4000.0)));
   328     07AB  3003               	movlw	3
   329     07AC  00F8               	movwf	??_main+2
   330     07AD  308A               	movlw	138
   331     07AE  00F7               	movwf	??_main+1
   332     07AF  3055               	movlw	85
   333     07B0  00F6               	movwf	??_main
   334     07B1                     u747:
   335     07B1  0BF6               	decfsz	??_main,f
   336     07B2  2FB1               	goto	u747
   337     07B3  0BF7               	decfsz	??_main+1,f
   338     07B4  2FB1               	goto	u747
   339     07B5  0BF8               	decfsz	??_main+2,f
   340     07B6  2FB1               	goto	u747
   341     07B7  2FB8               	nop2
   342     07B8                     l17:
   343     07B8  120A  118A  2800   	ljmp	start
   344     07BB                     __end_of_main:
   345                           
   346                           	psect	text1
   347     07BB                     __ptext1:	
   348 ;; *************** function _chenillard *****************
   349 ;; Defined at:
   350 ;;		line 21 in file "main.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;  right           1    wreg     _Bool 
   353 ;; Auto vars:     Size  Location     Type
   354 ;;  right           1    1[COMMON] _Bool 
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, status,2, status,0
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         1       0       0       0       0
   366 ;;      Temps:          1       0       0       0       0
   367 ;;      Totals:         2       0       0       0       0
   368 ;;Total ram usage:        2 bytes
   369 ;; Hardware stack levels used: 1
   370 ;; This function calls:
   371 ;;		Nothing
   372 ;; This function is called by:
   373 ;;		_main
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377     07BB                     _chenillard:	
   378                           ;psect for function _chenillard
   379                           
   380                           
   381                           ;incstack = 0
   382                           ; Regs used in _chenillard: [wreg+status,2+status,0]
   383                           ;chenillard@right stored from wreg
   384     07BB  00F1               	movwf	chenillard@right
   385     07BC                     l580:
   386                           
   387                           ;main.c: 22:     const uint8_t MAX_CHENILLARD = 0x80;;main.c: 23:     const uint8_t MIN_
      +                          CHENILLARD = 0x01;;main.c: 25:     static uint8_t chenillard = 0;;main.c: 26:     static
      +                           _Bool max = 0;;main.c: 28:     TRISD = 0x00;
   388     07BC  1683               	bsf	3,5	;RP0=1, select bank1
   389     07BD  1303               	bcf	3,6	;RP1=0, select bank1
   390     07BE  0188               	clrf	8	;volatile
   391     07BF                     l582:
   392                           
   393                           ;main.c: 29:     if (right == 1) {
   394     07BF  0371               	decf	chenillard@right,w
   395     07C0  1D03               	btfss	3,2
   396     07C1  2FC3               	goto	u11
   397     07C2  2FC4               	goto	u10
   398     07C3                     u11:
   399     07C3  2FDA               	goto	l596
   400     07C4                     u10:
   401     07C4                     l584:
   402                           
   403                           ;main.c: 30:         if (chenillard == MAX_CHENILLARD) {
   404     07C4  3080               	movlw	128
   405     07C5  067B               	xorwf	chenillard@chenillard,w
   406     07C6  1D03               	btfss	3,2
   407     07C7  2FC9               	goto	u21
   408     07C8  2FCA               	goto	u20
   409     07C9                     u21:
   410     07C9  2FCC               	goto	l588
   411     07CA                     u20:
   412     07CA                     l586:
   413                           
   414                           ;main.c: 31:             max = 1;
   415     07CA  3001               	movlw	1
   416     07CB  00FA               	movwf	chenillard@max
   417     07CC                     l588:
   418                           
   419                           ;main.c: 33:         if (max) {
   420     07CC  087A               	movf	chenillard@max,w
   421     07CD  1903               	btfsc	3,2
   422     07CE  2FD0               	goto	u31
   423     07CF  2FD1               	goto	u30
   424     07D0                     u31:
   425     07D0  2FD5               	goto	l594
   426     07D1                     u30:
   427     07D1                     l590:
   428                           
   429                           ;main.c: 34:             chenillard = MIN_CHENILLARD;
   430     07D1  3001               	movlw	1
   431     07D2  00FB               	movwf	chenillard@chenillard
   432     07D3                     l592:
   433                           
   434                           ;main.c: 35:             max = 0;
   435     07D3  01FA               	clrf	chenillard@max
   436                           
   437                           ;main.c: 36:         } else {
   438     07D4  2FEE               	goto	l608
   439     07D5                     l594:
   440                           
   441                           ;main.c: 37:             chenillard = chenillard << 1;
   442     07D5  087B               	movf	chenillard@chenillard,w
   443     07D6  00F0               	movwf	??_chenillard
   444     07D7  0770               	addwf	??_chenillard,w
   445     07D8  00FB               	movwf	chenillard@chenillard
   446     07D9  2FEE               	goto	l608
   447     07DA                     l596:
   448                           
   449                           ;main.c: 40:         if (chenillard == MIN_CHENILLARD) {
   450     07DA  037B               	decf	chenillard@chenillard,w
   451     07DB  1D03               	btfss	3,2
   452     07DC  2FDE               	goto	u41
   453     07DD  2FDF               	goto	u40
   454     07DE                     u41:
   455     07DE  2FE1               	goto	l600
   456     07DF                     u40:
   457     07DF                     l598:
   458                           
   459                           ;main.c: 41:             max = 1;
   460     07DF  3001               	movlw	1
   461     07E0  00FA               	movwf	chenillard@max
   462     07E1                     l600:
   463                           
   464                           ;main.c: 43:         if (max) {
   465     07E1  087A               	movf	chenillard@max,w
   466     07E2  1903               	btfsc	3,2
   467     07E3  2FE5               	goto	u51
   468     07E4  2FE6               	goto	u50
   469     07E5                     u51:
   470     07E5  2FE9               	goto	l606
   471     07E6                     u50:
   472     07E6                     l602:
   473                           
   474                           ;main.c: 44:             chenillard = MAX_CHENILLARD;
   475     07E6  3080               	movlw	128
   476     07E7  00FB               	movwf	chenillard@chenillard
   477     07E8  2FD3               	goto	l592
   478     07E9                     l606:
   479                           
   480                           ;main.c: 47:             chenillard = chenillard >> 1;
   481     07E9  087B               	movf	chenillard@chenillard,w
   482     07EA  00F0               	movwf	??_chenillard
   483     07EB  1003               	clrc
   484     07EC  0C70               	rrf	??_chenillard,w
   485     07ED  00FB               	movwf	chenillard@chenillard
   486     07EE                     l608:
   487                           
   488                           ;main.c: 50:     PORTD = chenillard;
   489     07EE  087B               	movf	chenillard@chenillard,w
   490     07EF  1283               	bcf	3,5	;RP0=0, select bank0
   491     07F0  1303               	bcf	3,6	;RP1=0, select bank0
   492     07F1  0088               	movwf	8	;volatile
   493     07F2                     l36:
   494     07F2  0008               	return
   495     07F3                     __end_of_chenillard:
   496     0002                     ___latbits      equ	2
   497     007E                     btemp           set	126	;btemp
   498     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    2
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_chenillard

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4      17
                                              2 COMMON     8     4      4
                         _chenillard
 ---------------------------------------------------------------------------------
 (1) _chenillard                                           2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _chenillard

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0       0      0.0%
BITBANK0            80      0       0      0.0%
COMMON              14     10      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      14      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Apr 04 14:59:40 2025

                               pc 0002                                l17 07B8                                l36 07F2  
                              u10 07C4                                u11 07C3                                u20 07CA  
                              u21 07C9                                u30 07D1                                u31 07D0  
                              u40 07DF                                u41 07DE                                u50 07E6  
                              u51 07E5                                fsr 0004                               l600 07E1  
                             l602 07E6                               l606 07E9                               l608 07EE  
                             l580 07BC                               l590 07D1                               l582 07BF  
                             l592 07D3                               l584 07C4                               l594 07D5  
                             l586 07CA                               l588 07CC                               l596 07DA  
                             l598 07DF                               l870 07AB                               l866 07A4  
                             l868 07A5                               u747 07B1                              _main 07A4  
                            btemp 007E                              start 0000                   chenillard@right 0071  
                           ?_main 0072                             _PORTD 0008                             _TRISD 0088  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __initialization 07F3                      __end_of_main 07BB                            ??_main 0076  
__end_ofchenillard@MAX_CHENILLARD 000B                      __pdataCOMMON 007D           __end_of__initialization 07FC  
                  __pcstackCOMMON 0070                        _chenillard 07BB                        __pmaintext 07A4  
                      __stringtab 0003  __end_ofchenillard@MIN_CHENILLARD 000A                           __ptext1 07BB  
            end_of_initialization 07FC                       ?_chenillard 0070                     chenillard@max 007A  
                   __pidataCOMMON 07A3               start_initialization 07F3                       __pbssCOMMON 007A  
                       ___latbits 0002                         __pstrings 0003                      ??_chenillard 0070  
        chenillard@MAX_CHENILLARD 000A                       __stringbase 0008                         main@right 007C  
                       main@speed 007D                __end_of_chenillard 07F3                __end_of__stringtab 0009  
                        main@argc 0072                          main@argv 0074                          main@menu 0079  
                       stringcode 0003          chenillard@MIN_CHENILLARD 0009                          stringdir 0003  
                        stringtab 0003              chenillard@chenillard 007B  
